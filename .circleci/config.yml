
version: 2.1

executors:
  default:
    parameters:
      image-name:
        type: string
        default: "cimg/node"
      image-tag:
        type: string
        default: "15.11.0"
    docker:
      - image: << parameters.image-name>>:<< parameters.image-tag >>

parameters:
  config-file:
    type: string
    default: "supergraph.yml"
  config:
    type: string
    default: >
      subgraphs: {
        rick-and-morty: {
          routing_url: 'https://rickandmortyapi.com/graphql',
          schema: { file: 'rickmorty.graphql' }
        },
        countries: {
          routing_url: 'https://countries.trevorblades.com/',
          schema: { file: 'countries.graphql'}
        }
      }

commands:
  bootstrap-build:
    steps:
      - run: rover graph fetch rickmorty@current > rickmorty.graphql
      - run: rover graph fetch countries1@current > countries.graphql
      - run: |
          echo "<< pipeline.parameters.config >>" > << pipeline.parameters.config-file >>

  write-gateway-index:
    parameters:
      file:
        type: string
        default: index.js
    steps:
      - run:
          command: |
            STUFF=$(cat \<<END_HEREDOC
            const { ApolloServer } = require('apollo-server');
            const { ApolloGateway } = require('@apollo/gateway');
            const gateway = new ApolloGateway();
            // Pass the ApolloGateway to the ApolloServer constructor
            const server = new ApolloServer({
              gateway,
              subscriptions: false,
            });

            // The `listen` method launches a web server.
            server.listen().then(({ url }) => {
              console.log(`ðŸš€  Server ready at ${url}`);
            });

            END_HEREDOC
            )
            echo "$STUFF"
            echo "$STUFF" > << parameters.file >>


jobs:
  build:
    executor: rover/default
    steps:
      - checkout
      - run: docker -v
      - rover/install
      - run: rover --version
      - bootstrap-build
      - rover/build:
          path: << pipeline.parameters.config-file >>
      - run: 
          name: Publish subgraph rickmorty
          command: rover subgraph publish funkyfederation --routing-url https://rickandmortyapi.com/graphql --schema rickmorty.graphql --name rickmorty
      - run: rover subgraph publish funkyfederation --routing-url https://countries.trevorblades.com/ --schema countries.graphql --name countries
    

  rungateway:
    executor: default
    steps:
      - run: npm init --yes
      - run: npm install apollo-server graphql @apollo/gateway
      - write-gateway-index
      - run:
          command: APOLLO_KEY=$APOLLO_KEY_GATEWAY APOLLO_GRAPH_VARIANT=current node index.js
      - run: |
          curl \
          -X POST \
          -H "Content-Type: application/json" \
          --data '{ "query": "{ countries { code name } } " }' \
          https://countries.trevorblades.com/
      - run: |
          curl \
          -X POST \
          -H "Content-Type: application/json" \
          --data '{ "query": "{ countries { code name } } " }' \
          https://localhost:4000


orbs:
  rover:
    executors:
      default:
        parameters:
          image-name:
            type: string
            default: "cimg/node"
          image-tag:
            type: string
            default: "15.11.0"
        docker:
          - image: << parameters.image-name>>:<< parameters.image-tag >>
    commands:
      install:
        parameters:
          version:
            type: string
            default: "v0.0.4"
        steps:
          ## TODO: don't install if we already have this version installed, unless a force parameter is true
          - run: curl -sSL https://raw.githubusercontent.com/apollographql/rover/<< parameters.version >>/installers/binstall/scripts/nix/install.sh | sh
          - run: echo 'export PATH=$HOME/.rover/bin:$PATH' >> $BASH_ENV
      build:
        parameters:
          path:
            type: string
        steps:
          - run: rover core build --config << parameters.path >>
    
workflows:
  mine:
    jobs:
      - build
      - rungateway:
          requires:
            - build
